name: "Build"

on:
  push:
    tags:
      - 'v*'
    branches:
      - '**'

env:
  REGISTRY: ghcr.io

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled to have blame infos in sonar

      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 24
          cache: maven

      - name: Build with Maven
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
            echo "Building with revision=${VERSION}"
            mvn clean install org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Drevision=${VERSION}
          else
            echo "Building without revision"
            mvn clean install org.sonarsource.scanner.maven:sonar-maven-plugin:sonar 
          fi

      - name: Upload jar
        uses: actions/upload-artifact@v4
        with:
          name: jar
          path: |
            target/*.jar
          if-no-files-found: error
          retention-days: 1

  docker-image:
    name: Docker Image
    timeout-minutes: 20
    runs-on: ubuntu-latest
    needs: [ build ]
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Create directory for jar
        run: mkdir target

      - name: Download jar
        uses: actions/download-artifact@v4
        with:
          name: jar
          path: target

      - name: Log in to the GitHub container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: "${{ env.REGISTRY }}/steadybit/mcp"

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          load: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          build-args: |
            VERSION=${{ github.ref_type == 'tag' && github.ref || '' }}
            REVISION=${{ github.sha }}